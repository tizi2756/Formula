<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
    <!-- 指示Spring MVC扫描目标包中的类->扫描控制类 -->
    <context:component-scan base-package="com.liu.controller"/>
    <!-- 指示Spring MVC扫描目标包中的类->扫描服务类 -->
    <context:component-scan base-package="com.liu.service"/>

    <!-- 该元素做的事情包括注册用于支持基于注解的控制器的请求处理方法的bean对象 -->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>


    <mvc:resources mapping="/img/**" location="/img/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/*.html" location="/"/>

    <!--配置跳转页面的前缀和后缀-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--拦截器-->
    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--&lt;!&ndash; 需排除拦截的地址 &ndash;&gt;-->
            <!--&lt;!&ndash;  <mvc:exclude-mapping path="/userController/login"/>  &ndash;&gt;-->
            <!--&lt;!&ndash;这个类就是我们自定义的Interceptor &ndash;&gt;-->
        <!--</mvc:interceptor>-->
        <!--&lt;!&ndash; 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  &ndash;&gt;-->
    <!--</mvc:interceptors>-->

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="17367648787"></property>
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

</beans>